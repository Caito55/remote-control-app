name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Configure environment
        run: |
          # Setup Java paths
          JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
          
          # Setup Android paths
          ANDROID_HOME=/usr/local/lib/android/sdk
          ANDROID_NDK_HOME=$ANDROID_HOME/ndk/27.2.12479018
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
          
          # Setup build environment
          echo "USE_CCACHE=1" >> $GITHUB_ENV
          echo "NDK_CCACHE=/usr/bin/ccache" >> $GITHUB_ENV
          echo "JAVA_OPTS=-Xmx4096m" >> $GITHUB_ENV
          echo "PATH=$PATH:~/.local/bin" >> $GITHUB_ENV
          
          # Verify paths exist
          ls -l $JAVA_HOME/bin/java || echo "Java not found in expected path"
          ls -l $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager || echo "SDK Manager not found"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: |
          sudo chmod +x $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33" "build-tools;33.0.0" "ndk;27.2.12479018"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip libtool automake autoconf build-essential python3-pip python3-dev git libffi-dev libssl-dev
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
          sudo apt-get install -y libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev
          sudo apt-get install -y default-jdk wget lsb-release software-properties-common
          sudo apt-get install -y ccache

      - name: Prepare buildozer.spec
        run: |
          cat > buildozer.spec << 'EOF'
          [app]
          title = RemoteControl
          package.name = remotecontrol
          package.domain = org.caito55
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas
          version = 0.1
          requirements = python3,kivy,flet==0.15.0,kivymd,pillow,websockets,asyncio
          orientation = portrait
          osx.python_version = 3
          android.archs = arm64-v8a
          android.allow_backup = True
          android.api = 33
          android.minapi = 21
          android.ndk_api = 21
          android.sdk_path = /usr/local/lib/android/sdk
          android.ndk_path = /usr/local/lib/android/sdk/ndk/27.2.12479018
          android.ant_path = /usr/bin/ant
          android.permissions = INTERNET
          android.debug = 1
          android.accept_sdk_license = True
          android.gradle_dependencies = org.chromium:androidx.webkit:1.4.0
          p4a.branch = develop
          p4a.bootstrap = sdl2
          android.java_version = 8
          
          [buildozer]
          log_level = 2
          warn_on_root = 0
          android_sdk_path = /usr/local/lib/android/sdk
          android_ndk_path = /usr/local/lib/android/sdk/ndk/27.2.12479018
          android_api = 33
          java_home = /usr/lib/jvm/temurin-8-jdk-amd64
          EOF

      - name: Install Buildozer
        run: |
          python -m pip install --upgrade pip wheel
          pip install --upgrade buildozer Cython==0.29.33
          sudo chown -R $USER:$USER .
          sudo apt-get install -y automake
          ccache -M 50G

      - name: Setup build environment
        run: |
          # Crear y configurar directorios necesarios
          sudo mkdir -p /home/runner/.buildozer
          sudo mkdir -p /home/runner/.gradle
          sudo mkdir -p $ANDROID_HOME
          sudo mkdir -p $ANDROID_NDK_HOME
          
          # Configurar permisos
          sudo chown -R $USER:$USER /home/runner/.buildozer
          sudo chown -R $USER:$USER /home/runner/.gradle
          sudo chown -R $USER:$USER $ANDROID_HOME
          sudo chown -R $USER:$USER $ANDROID_NDK_HOME
          
          # Verificar entorno
          echo "=== Java Environment ==="
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          ls -l $JAVA_HOME/bin/java
          
          echo "=== Android Environment ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          ls -l $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager || echo "SDK Manager not found"
          
      - name: Build APK
        env:
          BUILDOZER_WARN_ON_ROOT: 0
        run: |
          # Limpiar cachÃ© si existe
          rm -rf .buildozer || true
          
          # Construir APK con log detallado
          buildozer android debug -v
      

      
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: RemoteControl-APK
          path: bin/*.apk
